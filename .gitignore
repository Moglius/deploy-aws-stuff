# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars.temp
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# TOX folder
.tox
results.sarif

**__pycache__
**.terraform
**.terraform.lock*
.coverage
.pytest_cache
.mystuffs.txt
src/terraform2/tfplan.out
src/terraform2/main2.tf.version
src/dynamo/ec2_instances.json
src/snow/db.sqlite3
src/importer/tfplan.out
src/data/albs_json.tfvars
src/data/ebs_attachments.tfvars
src/data/ebs_volumes.tfvars
src/tf_lb/providers.tf
src/tf_mtls/client1.csr
src/tf_mtls/client1.key
src/tf_mtls/client1.pem
src/tf_mtls/my_client.csr
src/tf_mtls/my_client.key
src/tf_mtls/my_client.pem
src/tf_mtls/my_srv.csr
src/tf_mtls/my_srv.key
src/tf_mtls/my_srv.pem
src/tf_mtls/RootCA.key
src/tf_mtls/RootCA.pem
src/tf_mtls/truststore.pem
